!function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function r(t){return"request-cache-"+c}function o(t,e){return Promise.all([t,t.open(r(c)),e])}function a(t){return t.addAll(i.concat(["bundle.js","bundle.js.map","code-of-conduct.html","december-2013-meetup-photo.jpg","ejs.png","favicon.ico","index-archive.html","index.bundle.js","index.bundle.js.map","index.html","january-2013-meetup-photo.jpg","november-meetup-photo.jpg","sponsorship.html","startup-edmonton.png","startup_edmonton.jpg","worker.bundle.js","worker.bundle.js.map"]))}function s(t,e){return t.keys().then(function(t){return t.filter(function(t){return t!==e})}).then(function(e){return e.map(function(e){return t["delete"](e)})})}var u=function(){function t(t,e){var n=[],r=!0,o=!1,a=void 0;try{for(var s,u=t[Symbol.iterator]();!(r=(s=u.next()).done)&&(n.push(s.value),!e||n.length!==e);r=!0);}catch(c){o=!0,a=c}finally{try{!r&&u["return"]&&u["return"]()}finally{if(o)throw a}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();console.log("SW startup");var c=62,i=["https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css","https://maps.google.com/maps/api/staticmap?center=53.5461361,-113.4991690&zoom=15&size=240x180&maptype=roadmap&sensor=false&language=&markers=color:green|label:none|53.5461361,-113.4991690","https://netdna.bootstrapcdn.com/bootstrap/3.0.0/fonts/glyphicons-halflings-regular.woff"];self.addEventListener("install",function(t){console.log("SW installed"),o(caches,r(c)).then(function(t){var e=u(t,3),n=e[0],r=e[1],o=e[2];return a(r).then(function(t){return[n,o]})}).then(function(t){var e=u(t,2),n=e[0],r=e[1];return s(n,r)})}),self.addEventListener("activate",function(t){console.log("SW activated")}),self.addEventListener("fetch",function(t){console.log("Caught a fetch!"+t.request.url),t.respondWith(fetch(t.request))})}]);
//# sourceMappingURL=worker.bundle.js.map